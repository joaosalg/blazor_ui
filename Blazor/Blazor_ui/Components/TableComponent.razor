@using System.Reflection
@typeparam T;

<h3></h3>

<table class="table table-striped">
	<thead>
		<tr>
			@foreach (var coluna in listColumn)
			{
				<th>@coluna</th>
			}
		</tr>
	</thead>
	<tbody>
			@if (listT != null)
			{
				@foreach (var listT in listT)
				{
					<tr>
					@foreach (var prop in listProperties)
					{
						<td>@prop.GetValue(listT)</td>
					}
					</tr>
				}
			}
	</tbody>
</table>

@code {

	private List<string>? listColumn { get; set; }
	private List<PropertyInfo>? listProperties { get; set; }

	[Parameter]
	public IEnumerable<T>? listT { get; set; } = new List<T>();

	protected override void OnParametersSet()
	{
		listColumn = typeof(T).getColumns();
		listProperties = typeof(T).getProperties();
		base.OnParametersSet();
	}

	protected override void OnInitialized()
	{
		base.OnInitialized();
	}
}
